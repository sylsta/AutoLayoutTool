# -*- coding: utf-8 -*-
"""
/***************************************************************************
 AutoLayoutTool
                                 A QGIS plugin
 Creates a layout with the current map canvas extent
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2021-11-19
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Sylvain Th√©ry
        email                : sylvain.thery@cnrs.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from PyQt5.QtCore import (Qt, QSize,QByteArray, pyqtSlot, pyqtSignal, QThread)
from PyQt5.QtGui import (QMovie)
from PyQt5.QtWidgets import ( QWidget,QSizePolicy,QVBoxLayout, QLabel,
                             QDialogButtonBox)
# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
# FORM_CLASS, _ = uic.loadUiType(os.path.join(
#     os.path.dirname(__file__), 'AutoLayoutTool_visual_help.ui'))
#

class AutoLayoutToolDialogVisualHelp(QtWidgets.QDialog):
    def __init__(self, parent=None):
        QWidget.__init__(self, parent)

        # Load the file into a QMovie
        self.plugin_dir = os.path.dirname(__file__)
        self.movie = QMovie(f"{self.plugin_dir}/help/AutoLayoutTool_visual_demo.gif", QByteArray(), self)
        size = self.movie.scaledSize()
        self.setGeometry(200, 200, size.width(), size.height())
        self.setWindowTitle(self.tr("Autolayout visual help"))

        self.movie_screen = QLabel()
        # Make label fit the gif
        self.movie_screen.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.movie_screen.setAlignment(Qt.AlignCenter)

        # Create the layout
        main_layout = QVBoxLayout()

        self.button_box = QDialogButtonBox(QDialogButtonBox.Close)
        self.button_box.rejected.connect(self.close)
        main_layout.addStretch()  # Ajoute un espace flexible
        main_layout.addWidget(self.button_box)  # Ajoute le QDialogButtonBox en bas
        main_layout.addWidget(self.movie_screen)
        self.button_box2 = QDialogButtonBox(QDialogButtonBox.Close)
        self.button_box2.rejected.connect(self.close)
        main_layout.addStretch()  # Ajoute un espace flexible
        main_layout.addWidget(self.button_box2)  # Ajoute le QDialogButtonBox en bas
        self.setLayout(main_layout)

        # Add the QMovie object to the label
        self.movie.setCacheMode(QMovie.CacheAll)
        self.movie.setSpeed(100)
        self.movie_screen.setMovie(self.movie)
        self.movie.start()


